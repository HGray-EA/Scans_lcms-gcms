---
title: "Emerging Chemicals Scans LC/GC Mass Spectrometry Analysis"
format:
  html: 
    theme: flatly 
    toc: true
    toc-location: right
---
## Introduction
Targetted Screening  data was pulled from CANARY, this includes LCMS and GCMS data, sites from the RSN network with "scans" data were selected for analysis.

"Scans" data includes emerging chemicals (such as flame retardants, anti-depressants etc) these compounds aren't monitored for using conventional water quality sondes but can be identified through mass spectrometry lab analysis. A broad suite of these compounds are sampled across the RSN network, however we have little understanding whether there is more financial merit to be had from monitoring at the existing temporal frequency of monthly or to reduce the temporal frequency of monitoring but increase the spatial extent of monitoring for these compounds.

Here we aim to understand can the variation around the mean concentration of scans data (for all compounds grouped together) be best described by frequency of sampling (temporal var) or spatially.

Environmental monitoring data is typically not normally distributed and site selection is commonly nested (monitoring sites in the same catchment), so we use a mixed effect model to accommodate for these.

```{r, data load}
#| warning: false
#| echo: false
#| code-fold: true

library(tidyverse)
require(skimr)
library(leaflet)
require(leaflet.extras)
library(sf)
library(magrittr)
library(lme4)
require(tidylog)
library(mgcv)
require(MetBrewer)

# Function which reads tsv
  readtsv <- function(filepath){
    
    read.table(paste0("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/SEDA_Analysis/",filepath), sep = '\t', header =T)
  }

# Load in data files from CANARY. Are these all the files I need, not sure
  Tgt_Screening_GCMS <- readtsv("GCMS_Target_Screening_detections_raw_data_2025_08_08.tsv")
  EA_NLS_Target_GCMS <- readtsv("GCMS_EA_NLS_Target_Database_2025_08_08.tsv")
  GCMS_Open_Tgt <- readtsv("GCMS_Target_and_Non_Targeted_Screening_for_Open_Data__detes_3106_7299_4994__2025_08_08.tsv")
  
  LCMS_Open_Tgt <- readtsv("LCMS_Target_and_Non_Targeted_Screening_for_Open_Data__detes_3106_7299_4994__2025_08_08.tsv")  
  Tgt_Screening_LCMS <- readtsv("LCMS_Target_Screening_detections_raw_data_2025_08_08.tsv")
  EA_NLS_Target_LCMS <- readtsv("LCMS_EA_NLS_Target_Database_2025_08_08.tsv")

# LC/GC-MS library
  LCGC_Lib <- readxl::read_excel("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/SEDA_Analysis/Combined_GCMS__LCMS_Database_MAY_2025.xlsx", skip=2) %>% 
      rename("Compound_Name" ="...1" ,
               "CAS#" = "...2",
             "Description" = "...3",
             "GCMS_LOD" = "GC-MS",
             "LCMS_LOD" = "LC-MS",
             "Added_LC" = "...6",
             "Added_GC" = "...7")
  
  
#Load RSN sites
  RSN_Sites <- readxl::read_excel("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/SEDA_Analysis/Site_locations__showing_current_status_.xlsx", skip =2)
```


```{r, transforms}  
#| code-fold: true

# Transform 
 # names(LCMS_Open_Tgt)==names(GCMS_Open_Tgt) check colnames are the same before rbind
  
# Merge LCMS & GCMS data into one dataframe
  Open_Tgt <- rbind(LCMS_Open_Tgt, GCMS_Open_Tgt)
  
# Convert to sf for leaflet map later
  Open_Tgt_sf <- Open_Tgt %>% st_as_sf(coords = c("Longitude","Latitude"), crs=4326)
  RSN_Sites_sf <- RSN_Sites %>% st_as_sf(coords = c("GRTS longitude (WGS84)","GRTS latitude (WGS84)"), crs=4326)
  
# Confirm if site ids match
# Extract month and year for temporal variance and log concentration for normality.

# Select scans sites from RSN network only  
  RSN_MS <-  Open_Tgt_sf %>% 
    filter(str_detect(Sample_Site_ID, "RSN"))
  
    RSN_MS %<>% 
    mutate(
      month = as.factor(month(Sample_datetime)),
      season = case_when(
               month %in% c(3,4,5) ~ "Spring",
               month %in% c(6,7,8) ~ "Summer",
               month %in% c(9,10,11) ~ "Autumn",
               month %in% c(12,1,2) ~ "Winter"),
      logConc = log(Concentration)
    ) %>% 
      group_by(Compound_Name) %>% 
      mutate(
        norm_logconc = scale(logConc)
      ) %>% 
      ungroup()
    


```



## Exploratory analysis

We will first explore whether our concentration data is normally distributed, as this will impact the statistical models we can use.

:::{panel-tabset}

### Concentration histogram
```{r, conc data}
#| warning: false
#| echo: false

 # Observe concentration normality- large right tail
  ggplot(RSN_MS, aes(x = Concentration)) +
         geom_histogram(aes(y = ..density..), bins = 50) +
         geom_density(color = "seagreen2", size = 1)

  
```

### Log concentration histogram
```{r, log conc}
#| warning: false
#| echo: false
  
  ggplot(RSN_MS, aes(x = logConc)) +
    geom_histogram(aes(y = ..density..), bins = 50) +
    geom_density(color = "seagreen2", size = 1)
```

:::


## Temporal and Spatial Variation
The below plot shows the seasonal variation in the normalised log of concentration for all compounds through the seasons- summer and autumn have a median concentration higher than winter and spring. This shows there is a temporal variation in concentration of all compounds when grouped together. 

```{r, EDA}
# Visualise   
 
  
 RSN_MS$season <- factor(RSN_MS$season, levels = c("Winter", "Spring", "Summer", "Autumn"))
  
 plt <-  ggplot(RSN_MS, aes(x = season, y =norm_logconc, fill=season))+
    geom_violin() + geom_boxplot(width=0.3)+labs(title = "Concentraion by Season")

 plotly::ggplotly(plt)
```

The below heatmap shows the spatial variation of concentration for all compounds within England. This map shows there is temporal variation.  

```{r, map }

  
  met_hex <- MetBrewer::met.brewer("Peru1", direction = -1) %>% 
                    as.character()
  
  pal <- colorNumeric(palette = met_hex, domain = RSN_MS$logConc)

  leaflet::leaflet(RSN_MS) %>% 
    addProviderTiles(providers$Esri) %>% 
    addCircleMarkers(fillColor = ~pal(logConc), 
                     color = NA,
                     radius = 5,
                     fillOpacity = 1, 
                     popup = paste0("Site: ", RSN_MS$SMPT_LONG_NAME,"<br>",
                                    "log(Conc): ", RSN_MS$logConc, " ug/L")
                      ) %>% 
                      addLegend("bottomright",
                                pal = pal,
                                values = RSN_MS$logConc,
                                title = "All Compounds log-concentration")

```    

```{r, heatmap}
  leaflet::leaflet(RSN_MS) %>% 
    addProviderTiles(providers$Esri) %>% 
    leaflet.extras::addHeatmap(intensity =~logConc,
                               blur=30, radius=20)

```

## Statistical modelling

Now we know there is both spatial and temporal variation, can we test which has the most impact on concentration of the "scans" compounds.

Below we use a random effect mixed model, whereby we let each site have a random intercept`, so each site can start at a given concentration but the trend for that site is the same across all sites (fixed). 

We do the same for season.

```{r, LMM}
#| code-fold: true

lme1 <- RSN_MS %>% 
      filter(Compound_Name == "Perfluorooctane sulfonate (PFOS)") %>% 
      lme4::lmer(logConc ~ (1| Sample_Site_ID) + (1| season), data =.)


  
 # residuals explains more than spatial or temporal - what we can't account for. 
 # Spaital explains ~double the amount of variance than temporal. 
 # lets try month instead of season to bring the residuals down and explain the intra-season varation better.
 # explains marginally more. So seasons is good enough, our residuals still stay high when 
 # we account for variance between months.
 
 plot(fitted(lme1), resid(lme1))
 abline(h = 0, col="red")
 # some heteroscadacity 
 
 qqnorm(resid(lme1))
 qqline(resid(lme1), col="red")
 
 
 plot(fitted(lme2), resid(lme2))
 abline(h = 0, col="red")
 # some heteroscadacity 
 
 qqnorm(resid(lme2))
 qqline(resid(lme2), col="red")
 
```

The model here shows that sites explain more variance from mean log(concentration) than seasons. but that our model fit is quite poor because we have high residuals - variance during the season and between sites is high. 

We also have heterscadacity on our model which shows it's biased independence?


```{r,}
# test for between month 
#| code-fold: true
lme2 <- RSN_MS %>% 
      filter(Compound_Name == "Perfluorooctane sulfonate (PFOS)") %>% 
      lme4::lmer(logConc ~ (1| Sample_Site_ID) + (1| month), data =.)
 
```

Month explains slightly more variance than seasonally but is still less than spatial variance. 

```{r, anova model comparison}
#| code-fold: true

anova(lme1, lme2)
```


```
Ibuprofen shows little variance between season and month, but more variance in concentration is captured by spatial variation.

```{r, Ibuprofen}

lmeI <- RSN_MS %>% 
      filter(Compound_Name == "Ibuprofen") %>%   
      lme4::lmer(logConc ~ (1| Sample_Site_ID) + (1| season/month), data =.)   # test for within season varation, nesting. 
      
summary(lmeI)


lmeII <- RSN_MS %>% 
      filter(Compound_Name == "Ibuprofen") %>%   
      lme4::lmer(logConc ~ (1| Sample_Site_ID) + (1| season), data =.) 

summary(lmeII)

lmeI <- RSN_MS %>% 
      filter(Compound_Name == "Ibuprofen") %>% 
      lme4::lmer(logConc ~ (1| Sample_Site_ID) + (1| month), data =.)
      

summary(lmeI)
      
```



## Selecting Compounds to represent wider dataset

 Isolate to 4 compounds to test:
 
# Bioavailable zinc (det code 4822)
# Perfluorooctanesulphonate anion (PFOS) (det code 9276)
# Cypermethrin (det code 0073)
# Tributyltin (TBT) (det code 8944)
# 17-alpha-ethinyloestradiol (EE2) (det code 9899)

From these compounds, only PFOS exists in the canary target screening data.


Sources: 

Pathways: 

Receptors: 

```{r, clustering to identify groups of chemicals}

```


```{r, transforms }

# Calc Start dates for compounds
compound_start <- LCGC_Lib %>%
  mutate(across(c(Added_LC, Added_GC), ymd)) %>%
  rowwise() %>%
  mutate(
    start_date = min(c_across(c(Added_LC, Added_GC)), na.rm = TRUE)
  ) %>%
  ungroup() %>%
  mutate(
    start_date = if_else(is.infinite(start_date), ymd("2000-01-01"), start_date)
  ) %>%
  select(Compound_Name, start_date)

# Full grid: all sampled-for compounds × all dates at this site
full_grid <- compound_start %>%
  crossing(Date) %>%
  mutate(Sample_Site_ID = site_id)

# Join measurements
RSN_MS_full <- full_grid %>%
  left_join(RSN_MS, by = c("Compound_Name", "Date", "Sample_Site_ID")) %>%
  mutate(
    not_detected = case_when(
      Date < start_date ~ NA,           # before compound was added
      is.na(Concentration) ~ TRUE,     # no detection
      TRUE ~ FALSE                      # detected
    )
  )

Compute compound-specific minimums
compound_mins <- RSN_MS %>%
  group_by(Compound_Name) %>%
  summarise(min_conc = min(Concentration, na.rm = TRUE) / 10000, .groups = "drop")

#Fill in non-detected concentrations and compute logConc per compound
RSN_MS_full <- RSN_MS_full %>%
  left_join(compound_mins, by = "Compound_Name") %>%
  mutate(
    Concentration = if_else(
      not_detected == TRUE & Date >= start_date,
      min_conc,
      Concentration
    ),
    logConc = if_else(
      not_detected == TRUE & Date >= start_date,
      log(Concentration),
      logConc
    )
  ) %>%
  select(-min_conc)  # remove column


```

```{r}
# From these compounds, only PFOS exists in the canary target screening data.

# Prior to model need to add when compounds were sampled for and not found to not bias GAM.

# Select sample dates
# apply conditional rule whereby compounds sampled for but not detected are added to the RSN sampled data. with a new minimal value 
# e.g. logConc(min(RSN_MS$Concentration)/10000)
# Apply that to the cens var


# List all compounds 
    
RSN_MS_full$rsn_id_fact <- as.factor(RSN_MS_full$Sample_Site_ID)

RSN_MS_full <- RSN_MS_full %>%
  mutate(cens_ind = if_else(not_detected, 1, 0),
         doy = yday(Date))


mod1 <- gam(
  cbind(logConc, cens_ind) ~ 

 # Include differences for each year - this will calculate a separate mean level for each

    year +

# Include a random intercept term corresponding to each site
# This accounts for additional, nuisance variability at the site level 
    s(rsn_id_fact, bs = "re") +

# Include the seasonality smoothly varying term we used earlier
    s(doy, bs = "cc", k = 12) +

# Include a 2 dimension smoothly varying term over space to account for broad scale spatial differences
# this uses a tensor product smooth with gam, which is more appropriate for this type of 2d smoothing
           
    te(SMPT_EASTING, SMPT_NORTHING),

  family = cnorm(link = "identity"),
  data = RSN_MS_full
)


mod1 <- RSN_MS_full %>%
              gam(matrix(c(logConc, cens, ncol=2)~1 + year + s(rsn_id_fact, bs='re') + 
              s(doy, bs='cc', k=12) +
              te(SMPT_EASTING, SMPT_NORTHING) + 
              family = cnorm(link = "identity")))

summary(mod1)

gam.check(mod1)
dev.off()
```
















